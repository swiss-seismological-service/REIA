import enum
from typing import List, Optional

from pydantic import Field

from reia.schemas.base import CreationInfoMixin, Model


class ELossCategory(str, enum.Enum):
    CONTENTS = 'contents'
    BUSINESS_INTERRUPTION = 'business_interruption'
    NONSTRUCTURAL = 'nonstructural'
    OCCUPANTS = 'occupants'
    STRUCTURAL = 'structural'
    NULL = 'null'


class VulnerabilityModel(CreationInfoMixin):
    oid: Optional[int] = Field(None, alias='_oid')
    name: Optional[str] = None
    description: Optional[str] = None
    assetcategory: Optional[str] = None
    publicid: Optional[str] = None
    type: Optional[ELossCategory] = Field(None, alias='_type')


class OccupantsVulnerabilityModel(VulnerabilityModel):
    pass


class ContentsVulnerabilityModel(VulnerabilityModel):
    pass


class StructuralVulnerabilityModel(VulnerabilityModel):
    pass


class NonstructuralVulnerabilityModel(VulnerabilityModel):
    pass


class BusinessInterruptionVulnerabilityModel(VulnerabilityModel):
    pass


class VulnerabilityFunction(Model):
    oid: Optional[int] = Field(None, alias='_oid')
    vulnerabilitymodel_oid: Optional[int] = Field(
        None, alias='_vulnerabilitymodel_oid')
    distribution: Optional[str] = None
    intensitymeasuretype: Optional[str] = None
    taxonomy: Optional[str] = None


class LossRatio(Model):
    oid: Optional[int] = Field(None, alias='_oid')
    intensitymeasurelevel: Optional[float] = None
    mean: Optional[float] = None
    coefficientofvariation: Optional[float] = None
    pmf_variable: Optional[List[float]] = None
    pmf_probability: Optional[List[float]] = None
    vulnerabilityfunction_oid: Optional[int] = Field(
        None, alias='_vulnerabilityfunction_oid')
