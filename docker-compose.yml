services:
  # PostgreSQL database with PostGIS and pg_weighted_statistics extensions
  postgres:
    image: ghcr.io/schmidni/pg_weighted_statistics:sha256-353ed3ce2ef87511707d09912c17efebeacd816d615412dc53d1d22f5625b411
    container_name: "${COMPOSE_PROJECT_NAME}_postgres"
    environment:
      # PostgreSQL superuser credentials (required by PostgreSQL image)
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # REIA database credentials (used by init script)
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      # Custom PostgreSQL configuration
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./db/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      # Database initialization script
      - ./db/init_database.sh:/docker-entrypoint-initdb.d/00_init_database.sh:ro
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data
    # Increase shared memory for large datasets
    shm_size: 1gb
    command: 
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      - -c
      - hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network

  # OpenQuake Engine
  openquake:
    image: openquake/engine:3.16
    container_name: "${COMPOSE_PROJECT_NAME}_openquake"
    environment:
      # OpenQuake configuration from README.md
      LOCKDOWN: "True"
      OQ_ADMIN_LOGIN: ${OQ_USER}
      OQ_ADMIN_PASSWORD: ${OQ_PASSWORD}
      OQ_ADMIN_EMAIL: ${OQ_ADMIN_EMAIL:-user@domain.ch}
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    env_file:
      - .env
    ports:
      - "${OQ_PORT:-8800}:8800"
    healthcheck:
      test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:8800/engine/'); print('ok')\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - network
    depends_on:
      postgres:
        condition: service_healthy

  webservice:
    build:
      context: .
      dockerfile: docker/Dockerfile.webservice
    container_name: "${COMPOSE_PROJECT_NAME}_webservice"
    environment:
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - ROOT_PATH
      - ALLOW_ORIGINS
      - ALLOW_ORIGIN_REGEX
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
    restart: ${DOCKER_RESTART_POLICY:-unless-stopped}
    ports:
        - ${DOCKER_WEB_PORT:-8000}:8000
    networks:
        - network
    depends_on:
      postgres:
        condition: service_healthy


volumes:
  # Persistent PostgreSQL data
  postgres_data:
    driver: local

networks:
  # Internal network for services
  network:
    driver: bridge
