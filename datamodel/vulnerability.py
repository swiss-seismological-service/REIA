from sqlalchemy.orm import relationship
from sqlalchemy.sql.schema import Column, ForeignKey
from sqlalchemy.sql.sqltypes import BigInteger, Float, String
from sqlalchemy.dialects.postgresql import ARRAY
from datamodel.mixins import PublicIdMixin, ClassificationMixin
from datamodel.base import ORMBase
from datamodel.lossmodel import loss_vulnerability_association


class VulnerabilityModel(PublicIdMixin, ORMBase):
    """Vulnerability model"""
    lossCategory = Column(String, nullable=False)
    assetCategory = Column(String)
    description = Column(String)
    lossModels = relationship(
        'LossModel',
        secondary=loss_vulnerability_association,
        back_populates='vulnerabilityModels')
    vulnerabilityFunctions = relationship(
        'VulnerabilityFunction',
        back_populates='vulnerabilityModel',
        single_parent=True,
        cascade='all, delete, delete-orphan',
        lazy='joined')


class VulnerabilityFunction(ClassificationMixin('taxonomy'), ORMBase):
    """Vulnerability functiton model"""
    _vulnerabilityModel_oid = Column(
        BigInteger,
        ForeignKey('loss_vulnerabilitymodel._oid'))
    vulnerabilityModel = relationship(
        'VulnerabilityModel',
        back_populates='vulnerabilityFunctions')

    distribution = Column(String, nullable=False)
    intensitymeasuretype = Column(String, nullable=False)
    intensityMeasureLevels = Column(ARRAY(Float))
    meanLossRatios = Column(ARRAY(Float))
    covarianceLossRatios = Column(ARRAY(Float))
