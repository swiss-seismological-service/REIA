from datamodel import VulnerabilityModel, VulnerabilityFunction

VF = {
    'intensityMeasureType': 'MMI',
    'intensityMeasureLevels': [1, 2, 3],
    'distribution': 'beta',
    'meanLossRatios': [3, 2, 1],
    'covarianceLossRatios': [0.1, 0.2, 3],
    'taxonomy_concept': 'VF1_2'
}


def test_vulnerability_model():
    vulnerability_model = VulnerabilityModel(
        assetCategory='building',
        _oid=1,
        lossCategory='structural',
        description='some description'
    )

    vulnerabilityFunction = VulnerabilityFunction(
        vulnerabilityModel=vulnerability_model, **VF)
    vf = VF.copy()
    vf['taxonomy'] = vf.pop('taxonomy_concept')

    dct = {
        'assetCategory': 'building',
        'public_id': 1,
        'lossCategory': 'structural',
        'description': 'some description',
        'vulnerabilityFunctions': [vf]
    }
    assert vulnerability_model.to_dict() == dct
