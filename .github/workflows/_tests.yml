name: tests
on:
    workflow_call:
        inputs:
            python-versions:
                required: true
                type: string
                default: '["3.10"]'

jobs:
    tests:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgis/postgis:16-3.4
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    DB_USER: db_user
                    DB_PASSWORD: db_password
                    DB_NAME: db_name
                options: >-
                    --health-cmd "pg_isready -U postgres"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5430:5432
            openquake:
                image: openquake/engine:3.16
                env:
                    LOCKDOWN: 'True'
                    OQ_ADMIN_LOGIN: oq_user
                    OQ_ADMIN_PASSWORD: oq_password
                    OQ_ADMIN_EMAIL: email@domain.com
                options: >-
                    --health-cmd "python3 -c \"import urllib.request; urllib.request.urlopen('http://localhost:8800/engine/'); print('ok')\" || exit 1"
                    --health-interval 20s
                    --health-timeout 10s
                    --health-retries 6
                    --health-start-period 30s
                ports:
                    - 8700:8800

        strategy:
            matrix:
                python-version: ${{ fromJson(inputs.python-versions) }}
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install pg_weighted_statistics extension
              run: |
                  # Install build dependencies
                  sudo apt-get update
                  sudo apt-get install -y build-essential postgresql-server-dev-16 git
                  
                  # Detect required clang version (GitHub Actions usually has PostgreSQL built with clang-14)
                  REQUIRED_CLANG=$(pg_config --configure | grep -oP 'clang-\K[0-9]+' | head -1)
                  
                  if [ -z "$REQUIRED_CLANG" ]; then
                      echo "Could not detect required clang version, installing default clang..."
                      sudo apt-get install -y clang llvm
                  else
                      echo "Installing clang-$REQUIRED_CLANG and llvm-$REQUIRED_CLANG..."
                      sudo apt-get install -y clang-$REQUIRED_CLANG llvm-$REQUIRED_CLANG
                      
                      # Create symlinks for the detected version
                      sudo ln -sf /usr/bin/clang-$REQUIRED_CLANG /usr/bin/clang
                      sudo ln -sf /usr/bin/clang++-$REQUIRED_CLANG /usr/bin/clang++
                  fi
                  
                  echo "Clang setup completed: $(clang --version | head -1)"
                  
                  # Clone and install extension
                  cd /tmp
                  git clone https://github.com/schmidni/pg_weighted_statistics.git
                  cd pg_weighted_statistics
                  make USE_PGXS=1
                  sudo make USE_PGXS=1 install
                  
                  # Wait for PostgreSQL to be ready
                  sleep 5
                  
                  # Create extension in test database
                  PGPASSWORD=postgres psql -h localhost -p 5430 -U postgres -d postgres -c "CREATE EXTENSION IF NOT EXISTS pg_weighted_statistics;"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip setuptools wheel
                  pip install -e .[dev,ws]
            - name: Run tests
              run: |
                  flake8
                  pytest --cov=reia --cov-report=xml
              env:
                  POSTGRES_HOST: localhost
                  POSTGRES_PORT: 5430
                  POSTGRES_USER: postgres
                  POSTGRES_PASSWORD: postgres
                  DB_USER: db_user
                  DB_PASSWORD: db_password
                  DB_NAME: db_name
                  OQ_USER: oq_user
                  OQ_PASSWORD: oq_password
                  OQ_HOST: http://localhost:8700
            - name: Store the codecov report
              if: matrix.python-version == '3.10'
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-report
                  path: coverage.xml
                  overwrite: true
